/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Bridge } from "./Bridge";

export class BridgeFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Bridge> {
    return super.deploy(overrides || {}) as Promise<Bridge>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Bridge {
    return super.attach(address) as Bridge;
  }
  connect(signer: Signer): BridgeFactory {
    return super.connect(signer) as BridgeFactory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Bridge {
    return new Contract(address, _abi, signerOrProvider) as Bridge;
  }
}

const _abi = [
  {
    inputs: [],
    name: "ACTIVE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GRACE_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINIMUM_FOR_VOTES_THRESHOLD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINIMUM_QUORUM",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "QUEUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WARM_UP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "queuedTransactions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
    ],
    name: "setActivePeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
    ],
    name: "setGracePeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quorum",
        type: "uint256",
      },
    ],
    name: "setMinimumQuorum",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    name: "setMinimumThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
    ],
    name: "setQueuePeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
    ],
    name: "setWarmUpPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526202a3006000556202a3006001556202a3006002556202a300600355603c600455601e60055534801561003657600080fd5b506108be806100466000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063b17ac1e11161008c578063cd820edc11610066578063cd820edc14610212578063f2b0653714610240578063f2f6596014610284578063f9a571a2146102b2576100cf565b8063b17ac1e1146101b8578063c1a287e2146101d6578063c90bd047146101f4576100cf565b80631a3d203d146100d45780631e9d5fad146100f257806363bd97c31461011057806367058d291461013e5780636f698fb51461016c578063b159beac1461019a575b600080fd5b6100dc6102e0565b6040518082815260200191505060405180910390f35b6100fa6102e6565b6040518082815260200191505060405180910390f35b61013c6004803603602081101561012657600080fd5b81019080803590602001909291905050506102ec565b005b61016a6004803603602081101561015457600080fd5b8101908080359060200190929190505050610397565b005b6101986004803603602081101561018257600080fd5b810190808035906020019092919050505061052e565b005b6101a261064f565b6040518082815260200191505060405180910390f35b6101c0610655565b6040518082815260200191505060405180910390f35b6101de61065b565b6040518082815260200191505060405180910390f35b6101fc610661565b6040518082815260200191505060405180910390f35b61023e6004803603602081101561022857600080fd5b8101908080359060200190929190505050610667565b005b61026c6004803603602081101561025657600080fd5b8101908080359060200190929190505050610712565b60405180821515815260200191505060405180910390f35b6102b06004803603602081101561029a57600080fd5b8101908080359060200190929190505050610732565b005b6102de600480360360208110156102c857600080fd5b81019080803590602001909291905050506107dd565b005b60025481565b60005481565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461038d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4f6e6c792044414f2063616e2063616c6c00000000000000000000000000000081525060200191505060405180910390fd5b8060028190555050565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610438576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4f6e6c792044414f2063616e2063616c6c00000000000000000000000000000081525060200191505060405180910390fd5b606481106104ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4d6178696d756d206973203130302e000000000000000000000000000000000081525060200191505060405180910390fd5b60328111610524576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4d696e696d756d2069732035302e00000000000000000000000000000000000081525060200191505060405180910390fd5b8060048190555050565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4f6e6c792044414f2063616e2063616c6c00000000000000000000000000000081525060200191505060405180910390fd5b60648110610645576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4d6178696d756d206973203130302e000000000000000000000000000000000081525060200191505060405180910390fd5b8060058190555050565b60055481565b60045481565b60035481565b60015481565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610708576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4f6e6c792044414f2063616e2063616c6c00000000000000000000000000000081525060200191505060405180910390fd5b8060018190555050565b60066020528060005260406000206000915054906101000a900460ff1681565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4f6e6c792044414f2063616e2063616c6c00000000000000000000000000000081525060200191505060405180910390fd5b8060038190555050565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461087e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4f6e6c792044414f2063616e2063616c6c00000000000000000000000000000081525060200191505060405180910390fd5b806000819055505056fea26469706673582212206046c8c60e5f93e54acd0a491a8705dbe022f2e6213604757a7bf1445799dae364736f6c63430007030033";

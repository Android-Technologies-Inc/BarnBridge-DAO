/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { DiamondLoupeFacet } from "./DiamondLoupeFacet";

export class DiamondLoupeFacetFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<DiamondLoupeFacet> {
    return super.deploy(overrides || {}) as Promise<DiamondLoupeFacet>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DiamondLoupeFacet {
    return super.attach(address) as DiamondLoupeFacet;
  }
  connect(signer: Signer): DiamondLoupeFacetFactory {
    return super.connect(signer) as DiamondLoupeFacetFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondLoupeFacet {
    return new Contract(address, _abi, signerOrProvider) as DiamondLoupeFacet;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_functionSelector",
        type: "bytes4",
      },
    ],
    name: "facetAddress",
    outputs: [
      {
        internalType: "address",
        name: "facetAddress_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facetAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "facetAddresses_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_facet",
        type: "address",
      },
    ],
    name: "facetFunctionSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "_facetFunctionSelectors",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondLoupe.Facet[]",
        name: "facets_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ee3806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806352ef6b2c146100515780637a0ed6271461006f578063adfca15e1461008d578063cdffacc6146100bd575b600080fd5b6100596100ed565b6040516100669190610cff565b60405180910390f35b6100776102f3565b6040516100849190610d43565b60405180910390f35b6100a760048036038101906100a29190610a55565b610770565b6040516100b49190610d21565b60405180910390f35b6100d760048036038101906100d29190610a7e565b610942565b6040516100e49190610ce4565b60405180910390f35b606060006100f96109ce565b90506000816001018054905090508067ffffffffffffffff8111801561011e57600080fd5b5060405190808252806020026020018201604052801561014d5781602001602082028036833780820191505090505b5092506000805b828110156102e957600084600101828154811061016d57fe5b90600052602060002090600891828204019190066004029054906101000a900460e01b90506000856000016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000805b858110156102765788818151811061022557fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156102695760019150610276565b8080600101915050610211565b50801561028957600090505050506102dc565b8188868151811061029657fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505084806001019550505050505b8080600101915050610154565b5080845250505090565b606060006102ff6109ce565b90506000816001018054905090508067ffffffffffffffff8111801561032457600080fd5b5060405190808252806020026020018201604052801561035e57816020015b61034b6109fb565b8152602001906001900390816103435790505b50925060608167ffffffffffffffff8111801561037a57600080fd5b506040519080825280602002602001820160405280156103a95781602001602082028036833780820191505090505b5090506000805b838110156107105760008560010182815481106103c957fe5b90600052602060002090600891828204019190066004029054906101000a900460e01b90506000866000016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000805b858110156105a4578273ffffffffffffffffffffffffffffffffffffffff168a828151811061049857fe5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff16141561059757838a82815181106104cd57fe5b6020026020010151602001518883815181106104e557fe5b602002602001015160ff16815181106104fa57fe5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152505060ff87828151811061055457fe5b602002602001015160ff161061056957600080fd5b86818151811061057557fe5b60200260200101805180919060010160ff1660ff1681525050600191506105a4565b808060010191505061046d565b5080156105b75760009050505050610703565b818986815181106105c457fe5b60200260200101516000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508667ffffffffffffffff8111801561061957600080fd5b506040519080825280602002602001820160405280156106485781602001602082028036833780820191505090505b5089868151811061065557fe5b6020026020010151602001819052508289868151811061067157fe5b60200260200101516020015160008151811061068957fe5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152505060018686815181106106e357fe5b602002602001019060ff16908160ff168152505084806001019550505050505b80806001019150506103b0565b5060005b8181101561076557600083828151811061072a57fe5b602002602001015160ff169050606087838151811061074557fe5b602002602001015160200151905081815250508080600101915050610714565b508085525050505090565b6060600061077c6109ce565b905060008160010180549050905060008167ffffffffffffffff811180156107a357600080fd5b506040519080825280602002602001820160405280156107d25781602001602082028036833780820191505090505b50935060005b828110156109365760008460010182815481106107f157fe5b90600052602060002090600891828204019190066004029054906101000a900460e01b90506000856000016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16141561092757818785815181106108d257fe5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152505083806001019450505b505080806001019150506107d8565b50808452505050919050565b60008061094d6109ce565b9050806000016000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b6000807fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90508091505090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b600081359050610a3a81610e7f565b92915050565b600081359050610a4f81610e96565b92915050565b600060208284031215610a6757600080fd5b6000610a7584828501610a2b565b91505092915050565b600060208284031215610a9057600080fd5b6000610a9e84828501610a40565b91505092915050565b6000610ab38383610aeb565b60208301905092915050565b6000610acb8383610c98565b60208301905092915050565b6000610ae38383610ca7565b905092915050565b610af481610e21565b82525050565b610b0381610e21565b82525050565b6000610b1482610d95565b610b1e8185610ddd565b9350610b2983610d65565b8060005b83811015610b5a578151610b418882610aa7565b9750610b4c83610db6565b925050600181019050610b2d565b5085935050505092915050565b6000610b7282610da0565b610b7c8185610dee565b9350610b8783610d75565b8060005b83811015610bb8578151610b9f8882610abf565b9750610baa83610dc3565b925050600181019050610b8b565b5085935050505092915050565b6000610bd082610da0565b610bda8185610dff565b9350610be583610d75565b8060005b83811015610c16578151610bfd8882610abf565b9750610c0883610dc3565b925050600181019050610be9565b5085935050505092915050565b6000610c2e82610dab565b610c388185610e10565b935083602082028501610c4a85610d85565b8060005b85811015610c865784840389528151610c678582610ad7565b9450610c7283610dd0565b925060208a01995050600181019050610c4e565b50829750879550505050505092915050565b610ca181610e33565b82525050565b6000604083016000830151610cbf6000860182610aeb565b5060208301518482036020860152610cd78282610b67565b9150508091505092915050565b6000602082019050610cf96000830184610afa565b92915050565b60006020820190508181036000830152610d198184610b09565b905092915050565b60006020820190508181036000830152610d3b8184610bc5565b905092915050565b60006020820190508181036000830152610d5d8184610c23565b905092915050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610e2c82610e5f565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610e8881610e21565b8114610e9357600080fd5b50565b610e9f81610e33565b8114610eaa57600080fd5b5056fea2646970667358221220f6b21f5cf9314ec06ae9ad1d0d8f0734000a7f70782facaf9a5e026d93d171bc64736f6c63430007030033";
